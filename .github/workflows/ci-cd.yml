name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Rasa@123
          MYSQL_DATABASE: taskmanager_test
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -pRasa@123"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -P 33306 -u root -pRasa@123 -e "SELECT 1" >/dev/null 2>&1; then
              echo "MySQL ready"
              break
            fi
            echo "Waiting for MySQL... Attempt $i"
            sleep 2
          done

      - name: Create test database
        run: |
          mysql -h 127.0.0.1 -P 33306 -u root -pRasa@123 -e "CREATE DATABASE IF NOT EXISTS taskmanager_test;"

      - name: Build & run tests
        run: mvn clean test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:33306/taskmanager_test?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: Rasa@123
          SPRING_PROFILES_ACTIVE: test
          CI: true

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

      - name: Build JAR
        run: mvn package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: application-jar

      - name: Deploy to server (Placeholder)
        run: |
          echo "Deployment step placeholder - add real deployment commands here"
